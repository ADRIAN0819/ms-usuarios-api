#org: ivanrodriguezperez
org: adrianurbinamendoza
service: MS2-api-productos

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 29
  environment:
    JWT_SECRET: clave_de_prueba
    PRODUCTOS_TABLE: ${sls:stage}-t_MS2_productos
    #IMAGENES_BUCKET: ${sls:stage}-ms2-productos-imgs
    IMAGENES_BUCKET: ${sls:stage}-ms2-productos-imgs-grupo3
    TOKENS_TABLE: ${sls:stage}-t_MS1_tokens_acceso
  iam:
    #role: arn:aws:iam::748213590633:role/LabRole
    role: arn:aws:iam::254780740814:role/LabRole

functions:
  crearProducto:
    handler: lambdas/crearProducto.crearProducto
    events:
      - http:
          path: productos/crear
          method: post
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - POST
              - OPTIONS
          integration: lambda-proxy
      - http:
          path: productos/crear
          method: options
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - POST
              - OPTIONS
          integration: lambda-proxy

  listarProductos:
    handler: lambdas/listarProductos.listarProductos
    events:
      - http:
          path: productos/listar
          method: get
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - GET
              - OPTIONS
          integration: lambda-proxy
      - http:
          path: productos/listar
          method: options
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - GET
              - OPTIONS
          integration: lambda-proxy

  buscarProducto:
    handler: lambdas/buscarProducto.buscarProducto
    events:
      - http:
          path: productos/buscar/{codigo}
          method: get
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - GET
              - OPTIONS
          integration: lambda-proxy
      - http:
          path: productos/buscar/{codigo}
          method: options
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - GET
              - OPTIONS
          integration: lambda-proxy

  modificarProducto:
    handler: lambdas/modificarProducto.modificarProducto
    events:
      - http:
          path: productos/modificar
          method: put
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - PUT
              - OPTIONS
          integration: lambda-proxy
      - http:
          path: productos/modificar
          method: options
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - PUT
              - OPTIONS
          integration: lambda-proxy

  eliminarProducto:
    handler: lambdas/eliminarProducto.eliminarProducto
    events:
      - http:
          path: productos/eliminar
          method: delete
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - DELETE
              - OPTIONS
          integration: lambda-proxy
      - http:
          path: productos/eliminar
          method: options
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            methods:
              - DELETE
              - OPTIONS
          integration: lambda-proxy

resources:
  Resources:
    ProductosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCTOS_TABLE}
        AttributeDefinitions:
          - AttributeName: codigo
            AttributeType: S
        KeySchema:
          - AttributeName: codigo
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ImagenesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.IMAGENES_BUCKET}
